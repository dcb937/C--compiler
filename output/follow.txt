mulExpAtom	+ - < > <= >= == != = , ; ) # 
mulExp	+ - < > <= >= == != = , ; ) # 
addExpAtom	< > <= >= == != = , ; ) # 
relExp	== != = , ; ) # 
number	* / % + - < > <= >= == != = , ; ) # 
eqExpAtom	= , ; ) # 
assignExpAtom	, ; ) # 
addExp	< > <= >= == != = , ; ) # 
assignExp	, ; ) # 
exp	, ; ) # 
argFunctionR	) # 
funcRParams	) # 
funcRParam	, ) # 
varDecl	const void int ; { return INT IDN } # 
argVarDecl	; # 
argVarDef	, ; # 
constInitVal	, ; # 
compUnit	# 
argConst	; # 
unaryExp	* / % + - < > <= >= == != = , ; ) # 
bType	IDN # 
constDef	, ; # 
constExp	, ; # 
argExp	; # 
varDef	, ; # 
decl	const void int ; { return INT IDN } # 
program	# 
initVal	, ; # 
funcDef	const void int # 
eqExp	= , ; ) # 
funcType	IDN # 
funcFParams	) # 
funcFParam	, ) # 
argFunctionF	) # 
callFunc	* / % + - < > <= >= == != = , ; ) # 
constDecl	const void int ; { return INT IDN } # 
block	const void int ; { return INT IDN } # 
relExpAtom	== != = , ; ) # 
blockItem	} # 
stmt	const ; { return int INT IDN } # 
