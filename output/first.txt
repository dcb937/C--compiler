mulExpAtom	* / % 
mulExp	INT IDN 
addExp	INT IDN 
relExpAtom	< > <= >= 
relExp	INT IDN 
eqExpAtom	== != 
assignExpAtom	= 
assignExp	INT IDN 
unaryExp	INT IDN 
number	INT 
exp	INT IDN 
argExp	INT IDN 
argFunctionR	, 
funcRParams	INT IDN 
callFunc	( 
stmt	; { return INT IDN 
blockItem	const ; { return int INT IDN 
block	{ 
funcFParam	int 
funcType	void 
funcDef	void 
initVal	INT IDN 
!=	!= 
bType	int 
}	} 
<	< 
const	const 
==	== 
)	) 
funcRParam	INT IDN 
INT	INT 
,	, 
funcFParams	int 
varDecl	int 
{	{ 
;	; 
IDN	IDN 
argVarDef	= 
int	int 
eqExp	INT IDN 
argFunctionF	, 
return	return 
+	+ 
(	( 
constDecl	const 
*	* 
=	= 
constExp	INT IDN 
<=	<= 
/	/ 
addExpAtom	+ - 
>=	>= 
-	- 
void	void 
program	const void int 
compUnit	const void int 
%	% 
argConst	, 
constDef	IDN 
decl	const int 
constInitVal	INT IDN 
>	> 
argVarDecl	, 
varDef	IDN 
