unaryExp	INT IDN 
mulExp	INT IDN 
addExpAtom	+ - 
addExp	INT IDN 
relExp	INT IDN 
eqExp	INT IDN 
assignExpAtom	= 
exp	INT IDN 
argExp	INT IDN 
callFunc	( 
argConst	, 
IDN	IDN 
mulExpAtom	* / % 
==	== 
/	/ 
funcDef	void 
-	- 
funcRParam	INT IDN 
}	} 
number	INT 
assignExp	INT IDN 
constExp	INT IDN 
const	const 
program	const void int 
funcFParams	int 
relExpAtom	< > <= >= 
argVarDef	= 
,	, 
%	% 
<=	<= 
INT	INT 
*	* 
;	; 
=	= 
int	int 
<	< 
(	( 
eqExpAtom	== != 
>	> 
bType	int 
compUnit	const void int 
{	{ 
decl	const int 
!=	!= 
constDecl	const 
)	) 
constDef	IDN 
>=	>= 
constInitVal	INT IDN 
return	return 
varDecl	int 
stmt	; { return INT IDN 
block	{ 
argVarDecl	, 
funcRParams	INT IDN 
varDef	IDN 
argFunctionR	, 
initVal	INT IDN 
void	void 
funcType	void 
+	+ 
argFunctionF	, 
funcFParam	int 
blockItem	const ; { return int INT IDN 
